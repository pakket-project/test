name: "test workflow aaah"

on:
  workflow_dispatch:
    inputs:
      PR:
        description: "PR number"
        required: true
        default: "0"

jobs:
  test:
    runs-on: "${{matrix.os}}"
    strategy:
      matrix:
        include:
          - os: ["self-hosted", "silicon"]
            shell: "/usr/bin/arch -arch arm64e /bin/bash --noprofile --norc -eo pipefail {0}"
            arch: "silicon"
          - os: ["self-hosted", "intel"]
            shell: "bash"
            arch: "intel"

    defaults:
      run:
        shell: "${{matrix.shell}}"

    steps:
      - name: "check arch"
        run: "arch"

      - name: "checkout repository"
        uses: actions/checkout@v2
        # with:
        # fetch-depth: 2

      - name: "setup pakket-builder"
        uses: pakket-project/actions/setup-builder@main

      # - name: Get changed files
      #   id: changed-files
      #   uses: tj-actions/changed-files@v1.1.3
      #   with:
      #     path: "core"

      - name: "run pakket-builder"
        uses: pakket-project/test/build@main
        with:
          PR: "${{ github.event.inputs.PR }}"
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

          # modifiedPaths: "${{ steps.changed-files.outputs.all_modified_files }}"
    # // /runner/core/packages
    # const packagesPath = core.getInput('repoPath')
    # // /runner/core/packages/neofetch/0.17.0/package
    # const modifiedPaths = core.getInput('packagePaths').split(' ')
    # - name: Run pakket-builder on all modified files
    #   run: |
    #     for file in "${{ steps.changed-files.outputs.all_modified_files }}"; do
    #       if [[ $file =~ (packages\/)([^\/]*)\/([^\/]*)\/([^\n]*) ]]
    #       then
    #           name="${BASH_REMATCH[2]}"
    #           version="${BASH_REMATCH[3]}"

    #           echo "$name $version"
    #           pakket-builder build "$GITHUB_WORKSPACE/core/packages/$name" "$version" -o "$name-$version"
    #           echo "NAME=$name" >> $GITHUB_ENV
    #           echo "VERSION=$version" >> $GITHUB_ENV
    #       else
    #           echo "$file doesn't match" >&2
    #       fi
    #     done

    # - name: Push checksums
    #   run: |
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     cd "$GITHUB_WORKSPACE/core"
    #     git add packages/**
    #     git commit -m "add checksum for $NAME (${{ matrix.arch }}, $VERSION)"
    #     git pull
    #     git push
